/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/custom.js":
/*!********************************!*\
  !*** ./resources/js/custom.js ***!
  \********************************/
/***/ (() => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n$(document).ready(function () {\n  var page = location.pathname.split('/').slice(-1)[0];\n  logger('document loaded ' + page);\n  userLogged = sessionStorage.getItem(\"name\");\n  userLoggedin = sessionStorage.getItem(\"user_id\");\n  logger('User LoggedIn ' + userLogged);\n  logger('Uid ' + userLoggedin);\n  $('#name').html(userLogged);\n  $('#level').html(sessionStorage.getItem(\"company\"));\n  if (page == \"login\") {\n    logger(\"login Page Loaded\");\n    window.fbAsyncInit = function () {\n      FB.init({\n        appId: '1385286528202893',\n        xfbml: true,\n        version: 'v2.8'\n      });\n      FB.getLoginStatus(function (response) {\n        if (response.status === 'connected') {\n          document.getElementById('status').innerHTML = 'we are connected';\n        } else if (response.status === 'not_authorized') {\n          document.getElementById('status').innerHTML = 'we are not logged in.';\n        } else {\n          document.getElementById('status').innerHTML = 'you are not logged in to Facebook';\n        }\n      });\n    };\n    (function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"//connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, 'script', 'facebook-jssdk');\n  } else if (page == \"admin\") {\n    // var initial = getIntials(sessionStorage.getItem(\"name\"));\n    // logger(\"Initials \"+initial);\n    // var IntialHtml = '<figure class=\"avatar mr-2 avatar-sm\" data-initial=\"'+initial+'\"></figure>';\n    // $('#myinitials').html(IntialHtml);\n    // var userInitialsHtml = '<figure class=\"avatar mr-2 avatar-xl\" data-initial=\"'+initial+'\"></figure>';\n    // $('#userInitials').html(userInitialsHtml);\n    logger(\"Ni admin page\");\n    $.datepicker.setDefaults({\n      dateFormat: 'yy-mm-dd'\n    });\n    $(function () {\n      $(\"#consfrom_date\").datepicker();\n      $(\"#consto_date\").datepicker();\n    });\n    var currentDate = new Date();\n    var myDate = currentDate.addDays(-7);\n    $(\"#consfrom_date\").datepicker().datepicker(\"setDate\", myDate);\n    $(\"#consto_date\").datepicker().datepicker(\"setDate\", new Date());\n    initCalendar();\n    getDashData();\n    getUpcomingVisits();\n    getTimedBookings();\n  } else if (page == \"office\") {\n    logger(\"Offices Page Loaded\");\n    if (sessionStorage.getItem(\"user_type\") == 1) {} else {\n      document.getElementById('addOff').style.display = 'none';\n    }\n    getRegisteredOffices();\n  } else if (page == \"groups\") {\n    logger(\"Group Page Loaded\");\n    getRegisteredGroups();\n  } else if (page == 'request') {\n    logger(\"Request Page Loaded\");\n    getRequest();\n  } else if (page == 'book_facility') {\n    logger(\"Book Facility Page Loaded\");\n    document.getElementById('l_specif').style.display = 'none';\n    document.getElementById('t_specif').style.display = 'none';\n    $.datepicker.setDefaults({\n      dateFormat: 'yyyy-mm-dd'\n    });\n    $(\"#b_f_date\").datepicker({\n      format: 'yyyy-mm-dd'\n    });\n    $(\"#b_t_date\").datepicker({\n      format: 'yyyy-mm-dd'\n    });\n    var currentDate = new Date();\n    var myDate = currentDate.addDays(+7);\n    $(\"#b_t_date\").datepicker().datepicker(\"setDate\", myDate);\n    $(\"#b_f_date\").datepicker().datepicker(\"setDate\", new Date());\n    logger(\"User Level \" + sessionStorage.getItem(\"level\"));\n    getFreeFacilitiesList();\n    if (sessionStorage.getItem(\"level\") == 1) {\n      getFreeFacility();\n      getMyBookedFacilities();\n    } else {\n      getFreeFacility();\n      getBookedFacility();\n    }\n    getSpecialRequests();\n  } else if (page == \"clear_facility\") {\n    getOccupiedFacility();\n  } else if (page == \"authReports\") {\n    $.datepicker.setDefaults({\n      dateFormat: 'yyyy-mm-dd'\n    });\n    $(\"#f_r_auth_from\").datepicker({\n      format: 'yyyy-mm-dd'\n    });\n    $(\"#f_r_auth_to\").datepicker({\n      format: 'yyyy-mm-dd'\n    });\n    var currentDate = new Date();\n    var myDate = currentDate.addDays(+7);\n    $(\"#f_r_auth_to\").datepicker().datepicker(\"setDate\", myDate);\n    $(\"#f_r_auth_from\").datepicker().datepicker(\"setDate\", new Date());\n    getFacilityAuthReport();\n  } else if (page == \"revokeReports\") {\n    $.datepicker.setDefaults({\n      dateFormat: 'yyyy-mm-dd'\n    });\n    $(\"#f_r_auth_from\").datepicker({\n      format: 'yyyy-mm-dd'\n    });\n    $(\"#f_r_auth_to\").datepicker({\n      format: 'yyyy-mm-dd'\n    });\n    var currentDate = new Date();\n    var myDate = currentDate.addDays(+7);\n    $(\"#f_r_auth_to\").datepicker().datepicker(\"setDate\", myDate);\n    $(\"#f_r_auth_from\").datepicker().datepicker(\"setDate\", new Date());\n    getFacilityRevokeReport();\n  } else if (page == \"makeComplain\") {\n    logger(\"Make Complain Page Loaded\");\n    getAllFacilitiesList();\n    if (sessionStorage.getItem(\"level\") == 1) {\n      //getMyComplains();\n    } else {\n      //getAllComplains();\n    }\n  } else if (page == \"visitors\") {\n    $.datepicker.setDefaults({\n      dateFormat: 'yy-mm-dd'\n    });\n    $(function () {\n      // Initialize datepickers\n      $(\"#consfrom_date\").datepicker();\n      $(\"#consto_date\").datepicker();\n\n      // Get the current date and time\n      var currentDate = new Date();\n      var formattedDate = currentDate.toLocaleString();\n\n      // Subtract 7 days from the current date\n      var myDate = new Date();\n      myDate.setDate(currentDate.getDate() - 7);\n      var formattedMyDate = myDate.toLocaleString();\n\n      // Set the initial values of the datepickers\n      $(\"#consfrom_date\").datepicker(\"setDate\", formattedMyDate);\n      $(\"#consto_date\").datepicker(\"setDate\", formattedDate);\n    });\n    getAllLogs();\n    getAllOffices();\n  } else if (page == \"bookings\") {\n    $('#bookingss').html('Loading');\n    logger(\"Bookings Loaded\");\n    $(function () {\n      $(\"#consfrom_date\").datepicker();\n      $(\"#consto_date\").datepicker();\n    });\n    var currentDate = new Date();\n    var myDate = currentDate.addDays(-7);\n    $(\"#consfrom_date\").datepicker().datepicker(\"setDate\", myDate);\n    getAllOffices();\n    getBookings();\n  } else if (page == \"schedules\") {\n    $('#bookingss').html('Loading');\n    logger(\"Bookings Loaded\");\n    $(function () {\n      $('#consfrom_date').datetimepicker({\n        format: 'DD-MM-YYYY HH:mm'\n      });\n      $('#consto_date').datetimepicker({\n        format: 'DD-MM-YYYY HH:mm'\n      });\n    });\n    getAllOffices();\n    getSchedules();\n  } else if (page == \"register\") {\n    $('#cswaterflowtables').html('Loading');\n    getAllRegistered();\n  } else if (page == \"members\") {\n    $('#bookingss').html('Loading');\n    logger(\"Bookings Loaded\");\n    getAllOffices();\n  } else if (page == \"staff\") {\n    getDepartments();\n  } else if (page == \"profile\") {\n    getprofile();\n  } else if (page == \"visitor\") {\n    getmembersvistors();\n  }\n});\nvar myurl = \"http://localhost:8080/member/visitorAdmin/visitorapi/visitorAPI.php\";\n//var myurl = \"http://localhost/visitoradmin/visitorapi/visitorAPI.php\";\nlogger(\"Using Url \" + myurl);\nvar cqassigned = \"\";\nvar userLoggedin = \"\";\nvar userLogged = \"\";\nvar booking_ref = \"\";\nfunction getmembersvistors() {\n  console.log(\"this are visitors\");\n  var member_id = sessionStorage.getItem(\"num\");\n  console.log(\"iiiiid\", member_id);\n  var dataString = {\n    'request': 32,\n    'member_id': member_id\n  };\n  console.log(\"hh\", Response);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      console.log(data); // Check the response in the browser console\n\n      var ResponseJSON = JSON.parse(data);\n      var tbHTML = \"\";\n      for (var i = 0; i < ResponseJSON.getmembersvistors.length; i++) {\n        var visitor_name = ResponseJSON.getmembersvistors[i].visitor_name;\n        var visitor_id = ResponseJSON.getmembersvistors[i].visitor_id;\n        var visitor_phone = ResponseJSON.getmembersvistors[i].visitor_phone;\n        var booking_date = ResponseJSON.getmembersvistors[i].booking_date;\n        var booking_ref = ResponseJSON.getmembersvistors[i].booking_ref;\n        var visit_date_time = ResponseJSON.getmembersvistors[i].visit_date_time;\n        tbHTML += \"<tr><td>\" + visitor_name + \"</td><td>\" + visitor_id + \"</td><td>\" + visitor_phone + \"</td><td>\" + booking_date + \"</td><td>\" + booking_ref + \"</td><td>\" + visit_date_time + \"</td></tr>\";\n      }\n      tbHTML = '<table class=\"table table-striped table-hover\" id=\"projectsTablesa\" style=\"width:100%; margin: 0 auto;\"><thead><tr><th>Visitor Name</th><th>Visitor ID</th><th>Visitor Phone</th><th>Booking Date</th><th>Booking Ref</th><th>Visitor Date/Time</th></tr></thead><tbody>' + tbHTML + '</tbody></table>';\n      $('#projects-tablesa').html(tbHTML);\n      $('#projectsTablesa').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'lBfrtiBp',\n        buttons: ['copy', 'excel', 'csv', 'pdf', 'print']\n      });\n    }\n  });\n}\nfunction getprofile() {\n  console.log(\"these are properties\");\n  var user_id = sessionStorage.getItem(\"num\");\n  console.log(\"user_id\", user_id);\n  var dataString = {\n    'request': 31,\n    'user_id': user_id\n  };\n  console.log(\"hh\", Response);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      console.log(data); // Check the response in the browser console\n\n      var ResponseJSON = JSON.parse(data);\n      var tbHTML = \"\";\n      for (var i = 0; i < ResponseJSON.getprofile.length; i++) {\n        var Member_name = ResponseJSON.getprofile[i].Member_name;\n        var phone = ResponseJSON.getprofile[i].phone;\n        var Member_number = ResponseJSON.getprofile[i].Member_number;\n        tbHTML += \"<tr><td>\" + Member_name + \"</td><td>\" + phone + \"</td><td>\" + Member_number + \"</td></tr>\";\n      }\n      tbHTML = '<table class=\"table table-striped table-hover\" id=\"projectsTablesa\" style=\"width:80%; margin-left:0px\"><thead><tr><th>Member Name</th><th>Phone</th><th>Member Number</th></tr></thead><tbody>' + tbHTML + '</tbody></table>';\n      $('#projects-tablesa').html(tbHTML);\n      $('#projectsTablesa').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'lBfrtiBp',\n        buttons: ['copy', 'excel', 'csv', 'pdf', 'print']\n      });\n    }\n  });\n}\nfunction getmembers() {\n  logger(\"this are landlords\");\n  var dataString = {\n    'request': 29\n  };\n  logger(\"hh\", Response);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function () {\n      var _success = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n        var ResponseJSON, tbHTML, i, m_name, m_id, m_number, home_club, dete_joined, c_num, toadd, code, sty;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              logger(\"this\", dataString);\n              ResponseJSON = JSON.parse(JSON.stringify(data));\n              console.log(ResponseJSON);\n              sessionStorage.setItem('datamst', JSON.stringify(data));\n              logger(\"Length of Profile JSON \" + ResponseJSON.members.length);\n              tbHTML = \"\";\n              i = 0;\n            case 7:\n              if (!(i < ResponseJSON.members.length)) {\n                _context.next = 23;\n                break;\n              }\n              // var id = ResponseJSON.landlords[i].id;\n              m_name = ResponseJSON.members[i].m_name;\n              m_id = ResponseJSON.members[i].m_id;\n              m_number = ResponseJSON.members[i].m_number;\n              home_club = ResponseJSON.members[i].home_club;\n              dete_joined = ResponseJSON.members[i].dete_joined;\n              c_num = ResponseJSON.members[i].c_num;\n              _context.next = 16;\n              return getnumberproperty(id).then(function (k) {\n                return k;\n              });\n            case 16:\n              sty = _context.sent;\n              console.log(\"the main id is\", id, sty);\n\n              // $('input[name=\"id_no\"]').val(id_no);\n              // $('input[name=\"first_name\"]').val(first_name);\n              // $('input[name=\"last_name\"]').val(last_name);\n              // $('input[name=\"phone_number\"]').val(phone_number);\n              // $('input[name=\"properties\"]').val(properties);\n              // $('input[name=\"user_email\"]').val(user_email);\n\n              toadd = \"<a  onclick = 'setting(\" + \")' data-toggle='tooltip' title='' data-original-title='Edit'><i class='fas fa-pencil-alt'></i></a>\";\n              tbHTML += \"<tr><td><a href='#'>\" + m_name + \"</a></td>\" + \"<td><a href='#'>\" + m_id + \"</a></td>\" + '<td class=\"col-green font-weight-bold\">' + m_number + '</td>' + \"<td>\" + home_club + \"</td>\" + \"<td>\" + dete_joined + \"</td>\" + \"<td>\" + c_num + \"</td>\" + \"<td><div class='badge l-bg-\" + code + \"'>\" + toadd + \"</div></td></tr>\";\n            case 20:\n              i++;\n              _context.next = 7;\n              break;\n            case 23:\n              tbHTML = '<table class=\"table table-striped table-hover\" id=\"projectsTable\" style=\"width:100%;\"><thead><tr><th>ID no</th><th>First name</th><th>Last name</th><th>Phone number</th><th>Properties</th><th>User email</th><th>Edit</th></tr></thead><tbody>' + tbHTML + '</tbody></table>';\n              $('#projects-table').html(tbHTML);\n              $('#projectsTable').DataTable({\n                \"iDisplayLength\": 10,\n                dom: 'lBfrtiBp',\n                button: ['copy', 'excel', 'csv', 'pdf', 'print']\n                // buttons: [\n                // \t{\n                // \t\textend: 'copyHtml5',\n                // \t\texportOptions: {\n                // \t\t\tcolumns: [0,1,2,3,4]\n                // \t\t}\n                // \t},\n                // \t{\n                // \t\textend: 'excelHtml5',\n                // \t\texportOptions: {\n                // \t\t\tcolumns: [0,1,2,3,4]\n                // \t\t}\n                // \t},\n                // \t{\n                // \t\textend: 'pdfHtml5',\n                // \t\texportOptions: {\n                // \t\t\tcolumns: [0,1,2,3,4]\n                // \t\t}\n                // \t},\n                // \t{\n                // \t\textend: 'csvHtml5',\n                // \t\texportOptions: {\n                // \t\t\tcolumns: [0,1,2,3,4]\n                // \t\t}\n                // \t},\n                // \t// 'colvis'\n                // ]\n              });\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function success(_x) {\n        return _success.apply(this, arguments);\n      }\n      return success;\n    }()\n  });\n}\n$('#fblog').click(function () {\n  logger(\"fblog clicked\");\n  fblogin();\n  getInfo();\n  return false;\n});\nfunction fblogin() {\n  FB.login(function (response) {\n    logger(\"Fb Response \" + response);\n    if (response.status === 'connected') {\n      document.getElementById('status').innerHTML = 'we are connected';\n    } else if (response.status === 'not_authorized') {\n      document.getElementById('status').innerHTML = 'we are not logged in.';\n    } else {\n      document.getElementById('status').innerHTML = 'you are not logged in to Facebook';\n    }\n  });\n  return false;\n}\nfunction getInfo() {\n  FB.api('/me', 'GET', {\n    fields: 'first_name,last_name,name,id'\n  }, function (response) {\n    document.getElementById('status').innerHTML = \"Welcome \" + response.name;\n  });\n  return false;\n}\nfunction getAllRegistered() {\n  var dataString = {\n    'request': 25\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var waterFlowJSON = JSON.parse(data);\n      var trHTML = \"\";\n\n      //{\"registered\":[{\"registration_name\":\"THOMAS KONGOLO\",\"registration_id\":\"1\",\"registration_dayofbirth\":\"1993-04-27\",\n      //\"registration_gender\":\"M\",\"registration_phoneNumber\":\"0703208072\"}\n      logger(\"Length Ya \" + waterFlowJSON + \" Ni \" + waterFlowJSON.registered.length);\n      for (var i = 0; i < waterFlowJSON.registered.length; i++) {\n        if (i === 0) {\n          trHTML += '<tr><td align=\"left\">' + waterFlowJSON.registered[i].registration_name + '</td><td align=\"left\">' + waterFlowJSON.registered[i].registration_id + '</td><td align=\"left\">' + waterFlowJSON.registered[i].registration_dayofbirth + '</td><td align=\"left\">' + waterFlowJSON.registered[i].registration_gender + '</td><td align=\"left\">' + waterFlowJSON.registered[i].registration_phoneNumber + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + waterFlowJSON.registered[i].registration_name + '</td><td align=\"left\">' + waterFlowJSON.registered[i].registration_id + '</td><td align=\"left\">' + waterFlowJSON.registered[i].registration_dayofbirth + '</td><td align=\"left\">' + waterFlowJSON.registered[i].registration_gender + '</td><td align=\"left\">' + waterFlowJSON.registered[i].registration_phoneNumber + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"cswaterflowtable\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor ID</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor DOB</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor Gender</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor Contact</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#cswaterflowtables').html(trHTML);\n      $('#consperregtotals').html(waterFlowJSON.registered.length + \" Registered Visitors\");\n      var oTable = $('#cswaterflowtable').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting all logs \", e);\n    }\n  });\n  return false;\n}\nfunction getAllLogs() {\n  var from_date = $('#consfrom_date').val();\n  var to_date = $('#consto_date').val();\n  var office_id = \"\";\n  if (sessionStorage.getItem(\"user_type\") == 1) {\n    office_id = \"\";\n  } else {\n    office_id = sessionStorage.getItem(\"user_office\");\n  }\n  var dataString = {\n    'request': 20,\n    'from_date': from_date,\n    'to_date': to_date,\n    'office_id': office_id\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var waterFlowJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + waterFlowJSON + \" Ni \" + waterFlowJSON.visitor_logs.length);\n      for (var i = 0; i < waterFlowJSON.visitor_logs.length; i++) {\n        if (i === 0) {\n          trHTML += '<tr><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_name + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_id + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_plate + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_time + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].suite_no + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].occupant + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_name + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_id + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_plate + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_time + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].suite_no + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].occupant + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"cswaterflowtable\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor ID</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Vehicle Plate</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Time Logged</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Suite No</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Occupant</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#cswaterflowtables').html(trHTML);\n      $('#consperregtotals').html(waterFlowJSON.visitor_logs.length + \" Records\");\n      var oTable = $('#cswaterflowtable').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting all logs \", e);\n    }\n  });\n  return false;\n}\nfunction getDepartments() {\n  logger(\"Getting offices\");\n  var dataString = {\n    'request': 30\n  };\n  logger(dataString);\n  $('#hloadingmessage').show();\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      $('#hloadingmessage').hide();\n      logger('All offices Response ' + data);\n      SeriesJSON = data;\n      var tryJSON = JSON.parse(data);\n      var meterIDs = '<option></option>';\n      logger(\"Length Ya \" + tryJSON + \" Ni \" + tryJSON.offices.length);\n      for (var i = 0; i < tryJSON.offices.length; i++) {\n        if (i === 0) {\n          meterIDs += \"<option value='\" + tryJSON.offices[i].office_id + \"' selected>\" + tryJSON.offices[i].dep_name + \"</option>\";\n        } else {\n          meterIDs += \"<option value='\" + tryJSON.offices[i].office_id + \"'>\" + tryJSON.offices[i].dep_name + \"</option>\";\n        }\n      }\n      $(\"#zregid\").html(meterIDs);\n      $(\"#meterperregidS\").html(meterIDs);\n    },\n    error: function error(e) {\n      $('#hloadingmessage').hide();\n    }\n  });\n  return false;\n} // end of function getAllOffices\n\nfunction getpropertys() {\n  logger(\"Getting service\");\n  var agent_id = JSON.parse(localStorage.getItem(\"user_id\"));\n  var dataString = {\n    'request': 12,\n    'agent_id': agent_id\n  };\n  logger(dataString);\n  $('#hloadingmessage').show();\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      $('#hloadingmessage').hide();\n      logger('All description Response ' + data);\n      //SeriesJSON = data;\n      var serviceJSON = JSON.parse(JSON.stringify(data));\n      sessionStorage.setItem('property', JSON.stringify(data));\n      var service = '<option></option>';\n      logger(\"Length Ya \" + serviceJSON + \" Ni \" + serviceJSON.landlord.length);\n      for (var i = 0; i < serviceJSON.landlord.length; i++) {\n        console.log(\"the data 1\", serviceJSON.landlord[i]);\n        var dui = {\n          id: serviceJSON.landlord[i].id,\n          property_name: serviceJSON.landlord[i].property_name\n          //id:serviceJSON.landlord[i].Id\n        };\n\n        service += \"<option value='\".concat(JSON.stringify(dui), \"' >\").concat(serviceJSON.landlord[i].property_name, \"  </option> \");\n        // }\n\n        // service += \"<option value='\" + serviceJSON.service[i].service_id + \"'>\" + serviceJSON.service[i].services_name + \"</option>\";\n        // }\n      }\n\n      $(\"#name\").html(service);\n    }\n  });\n  return false;\n}\nfunction getAllOffices() {\n  logger(\"Getting offices\");\n  var office_id = \"\";\n  if (sessionStorage.getItem(\"user_type\") == 1) {\n    office_id = \"\";\n  } else {\n    office_id = sessionStorage.getItem(\"user_office\");\n  }\n  var dataString = {\n    'request': 21,\n    'office_id': office_id\n  };\n  logger(dataString);\n  $('#hloadingmessage').show();\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      $('#hloadingmessage').hide();\n      logger('All offices Response ' + data);\n      SeriesJSON = data;\n      var tryJSON = JSON.parse(data);\n      var meterIDs = '<option></option>';\n      logger(\"Length Ya \" + tryJSON + \" Ni \" + tryJSON.offices.length);\n      for (var i = 0; i < tryJSON.offices.length; i++) {\n        if (i === 0) {\n          meterIDs += \"<option value='\" + tryJSON.offices[i].office_id + \"' selected>\" + tryJSON.offices[i].occupant + \"</option>\";\n        } else {\n          meterIDs += \"<option value='\" + tryJSON.offices[i].office_id + \"'>\" + tryJSON.offices[i].occupant + \"</option>\";\n        }\n      }\n      $(\"#zregid\").html(meterIDs);\n      $(\"#meterperregid\").html(meterIDs);\n    },\n    error: function error(e) {\n      $('#hloadingmessage').hide();\n    }\n  });\n  return false;\n} // end of function getAllOffices\n\n$('#b_login').on('click', function (event) {\n  console.log(\"b_login clicked\");\n  var unum = $('input[name = \"unum\"]').val();\n  logger(\"member number \" + unum);\n  var upass = $('input[name = \"upass\"]').val();\n  if (unum == \"\") {\n    errorMessage = \"Member_number is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"unum\").style.borderColor = \"red\";\n    return;\n  } else if (upass == \"\") {\n    errorMessage = \"Password is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"upass\").style.borderColor = \"red\";\n    return;\n  }\n  logger(\"Password \" + upass);\n  var dataString = {\n    'unum': unum,\n    'upass': upass,\n    'request': 27\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Login Add Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n\n      //{\"login\":[{\"result\":\"TRUE\",\"loginmessage\":\"Successful Login\",\"user_id\":\"1\",\"user_pass\":\"abc123\",\"full_name\":\"Alex Mulei\",\n      //\"user_type\":\"1\",\"user_office\":\"1\",\"company_name\":\"KAPS\"}]}\n\n      var result = jsObject.login[0].result;\n      var loginmessage = jsObject.login[0].loginmessage;\n      if (result == \"TRUE\") {\n        //#666\n        $('#mess').html(\"Welcome \" + jsObject.login[0].Member_name);\n        document.getElementById(\"unum\").style.borderColor = \"#666\";\n        document.getElementById(\"upass\").style.borderColor = \"#666\";\n        document.getElementById(\"mess\").style.color = \"#666\";\n        sessionStorage.setItem(\"name\", jsObject.login[0].Member_name);\n        sessionStorage.setItem(\"user_id\", jsObject.login[0].Member_id);\n        sessionStorage.setItem(\"num\", jsObject.login[0].unum);\n        window.location = \"bookings\";\n      } else {\n        $('#mess').html(loginmessage);\n        document.getElementById(\"unum\").style.borderColor = \"red\";\n        document.getElementById(\"upass\").style.borderColor = \"red\";\n        document.getElementById(\"mess\").style.color = \"#ff0000\";\n      }\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred \" + e);\n    }\n  });\n  return false;\n});\n$('#u_saver').click(function () {\n  logger(\"u_saver clicked\");\n  var from_date = $('#consfrom_date').val();\n  logger(\"From Date \" + from_date);\n  var to_date = $('#consto_date').val();\n  logger(\"To Date \" + to_date);\n  var meterperregid = $('#meterperregid').val();\n  if (from_date == \"\" || to_date == \"\" || meterperregid == \"\") {\n    alert(\"Fill in all fields.\");\n    return;\n  }\n  var dataString = {\n    'from_date': from_date,\n    'to_date': to_date,\n    'meterperregid': meterperregid,\n    'request': 6\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Booking Add Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.requestadd[0].result;\n      var loginmessage = jsObject.requestadd[0].addmessage;\n      alert(loginmessage);\n      window.location = 'schedules';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred \" + e);\n    }\n  });\n  return false;\n});\nfunction checkPhoneNo() {\n  var v_id = $('input[name = \"v_id\"]').val();\n  logger(\"ID Typed \" + v_id);\n  var dataString = {\n    'v_id': v_id,\n    'request': 23\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Phone Response ' + data);\n      document.getElementById(\"v_phone\").value = data;\n    },\n    error: function error(e) {\n      alert(\"An Error Getting Phone Number \" + e);\n    }\n  });\n  return false;\n}\n\n// $('#confirmvisitor').on('click', function(e) {\n//     console.log(\"registermember\");\n//     var visitor_phone = $('input[name=\"visitor_phone\"]').val();\n//     var errorMessage;\n\n//     if (visitor_phone == \"\") {\n//         errorMessage = \"Phone Number is Required\";\n//         document.getElementById(\"confrimed\").innerText = errorMessage;\n//         document.getElementById('confrimed').style.display = 'block';\n//         document.getElementById(\"visitor_phone\").style.borderColor = \"red\";\n//         return;\n//     }\n\n//     var dataString = {\n//         'visitor_phone': visitor_phone,\n//         'request': 34\n//     };\n//     logger(dataString);\n//     $.ajax({\n//         type: \"POST\",\n//         url: myurl,\n//         data: dataString,\n//         success: function(data) {\n//             console.log(\"the data is\", data);\n\n//             var jsObject = JSON.parse(data);\n//             console.log(\"my object\", jsObject[0]);\n//             let bool_code = jsObject[0].bool_code;\n//             let booking_ref = jsObject[0].booking_ref;\n\n//             if (bool_code === true) {\n//                 var settings = {\n//                     \"url\": \"http://143.244.180.244:5000/api/v1/notifications/sms\",\n//                     \"method\": \"POST\",\n//                     \"timeout\": 0,\n//                     \"headers\": {\n//                         \"Content-Type\": \"application/json\"\n//                     },\n//                     \"data\": JSON.stringify({\n//                         \"body\": `Use this One Time Password ${booking_ref} to complete your registration`,\n//                         \"phoneNumber\": `${visitor_phone}`,\n//                         \"subject\": \"subject\",\n//                         \"emailAddress\": \"recipient\"\n//                     }),\n//                 };\n\n//                 $.ajax(settings).done(function(response) {\n//                     console.log(response);\n//                 });\n\n//                 Swal.fire(\n//                     'Success!',\n//                     'Insert OTP code that is sent to your phone number to complete registration',\n//                     'success'\n//                 ).then(function() {\n//                     window.location = \"confirmotp\";\n//                 });\n//             } else {\n//                 // Hide the error message element\n//                 document.getElementById('confrimed').style.display = 'none';\n//             }\n//         }\n//     });\n//     return false;\n// });\n\n// $('#confirmvisitor').on('click', function(e) {\n//     console.log(\"registermember\");\n//     var visitor_phone = $('input[name=\"visitor_phone\"]').val();\n//     console.log(\"registermember\",visitor_phone);\n//     var errorMessage;\n\n//     // if (visitor_phone == \"\") {\n//     //     errorMessage = \"Phone Number is Required\";\n//     //     document.getElementById(\"confrimed\").innerText = errorMessage;\n//     //     document.getElementById('confrimed').style.display = 'block';\n//     //     document.getElementById(\"visitor_phone\").style.borderColor = \"red\";\n//     //     return;\n//     // }\n\n//     // var dataString = {\n//     //     'visitor_phone': visitor_phone,\n//     //     'request': 34\n//     // };\n//     // logger(dataString);\n//     // $.ajax({\n//     //     type: \"POST\",\n//     //     url: myurl,\n//     //     data: dataString,\n//     //     success: function(data) {\n//     //         console.log(\"the data is\", data);\n\n//     //         var jsObject = JSON.parse(data);\n//     //         console.log(\"my object\", jsObject[0]);\n//     //         let bool_code = jsObject[0].bool_code;\n//     //         let booking_ref = jsObject[0].booking_ref;\n\n//     //         if (bool_code === true) {\n//     //             var settings = {\n//     //                 \"url\": \"http://143.244.180.244:5000/api/v1/notifications/sms\",\n//     //                 \"method\": \"POST\",\n//     //                 \"timeout\": 0,\n//     //                 \"headers\": {\n//     //                     \"Content-Type\": \"application/json\"\n//     //                 },\n//     //                 \"data\": JSON.stringify({\n//     //                     \"body\": `Use this One Time Password ${booking_ref} to complete your registration`,\n//     //                     \"phoneNumber\": `${visitor_phone}`,\n//     //                     \"subject\": \"subject\",\n//     //                     \"emailAddress\": \"recipient\"\n//     //                 }),\n//     //             };\n\n//     //             $.ajax(settings).done(function(response) {\n//     //                 console.log(response);\n//     //             });\n\n//     //             Swal.fire(\n//     //                 'Success!',\n//     //                 'Insert OTP code that is sent to your phone number to complete registration',\n//     //                 'success'\n//     //             ).then(function() {\n//     //                 window.location = \"confirmotp\";\n//     //             });\n//     //         } else {\n//     //             // Show the error message element\n//     //             document.getElementById(\"confrimed\").innerText = jsObject[0].message;\n//     //             document.getElementById('confrimed').style.display = 'block';\n//     //         }\n//     //     }\n//     // });\n//     return false;\n// });\nfunction clickConfirm() {\n  console.log(\"this is to do confirmation\");\n  var v_id = $('input[name=\"v_id\"]').val();\n  var visitor_phone = $('input[name=\"visitor_phone\"]').val();\n  console.log(\"registermember\", visitor_phone);\n  var errorMessage;\n\n  // Regular expression to match only numbers\n  var numbersRegex = /^[0-9]+$/;\n  if (v_id == \"\") {\n    errorMessage = \"Visitor ID is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"v_id\").style.borderColor = \"red\";\n    return;\n  }\n  // Check if v_id contains only numbers\n  else if (!v_id.match(numbersRegex)) {\n    errorMessage = \"Visitor ID must contain only numbers\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"v_id\").style.borderColor = \"red\";\n    return;\n  }\n  if (visitor_phone == \"\") {\n    errorMessage = \"Phone Number is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"visitor_phone\").style.borderColor = \"red\";\n    return;\n  }\n  var dataString = {\n    'visitor_phone': visitor_phone,\n    'v_id': v_id,\n    'request': 34\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      console.log(\"the data is\", data);\n      var jsObject = JSON.parse(data);\n      console.log(\"my object\", jsObject[0]);\n      var bool_code = jsObject[0].bool_code;\n      var booking_ref = jsObject[0].booking_ref;\n      if (bool_code === true) {\n        // $('input[name=\"v_phone\"]').each(function() {\n        //     var visitorPhone = $(this).val();\n        //     if (visitorPhone) {\n        //         var message = `Use this One Time Password ${booking_ref} to complete your verification`;\n        //         console.log(\"this is the message\", message);\n        //         $.ajax({\n        //             type: \"POST\",\n        //             url: \"http://localhost:8080/visitor/visitorAdmin/dist/js/sms_gateway.php\",\n        //             data: {\n        //                 phoneNumber: visitorPhone,\n        //                 message: message\n        //             },\n        //             success: function(response) {\n        //                 console.log(response);\n        //             },\n        //             error: function(e) {\n        //                 console.error(\"An Error Occurred sending SMS\", e);\n        //             }\n        //         });\n        //     }\n        // });\n\n        Swal.fire('Success!', 'Insert OTP code that is sent to your phone number to complete verification', 'success').then(function () {\n          window.location = \"verfyingotp.php\";\n        });\n      } else {\n        // Show the error message element\n        document.getElementById(\"confrimed\").innerText = jsObject[0].message;\n        document.getElementById('confrimed').style.display = 'block';\n\n        // var settings = {\n        //     \"url\": \"http://143.244.180.244:5000/api/v1/notifications/sms\",\n        //     \"method\": \"POST\",\n        //     \"timeout\": 0,\n        //     \"headers\": {\n        //         \"Content-Type\": \"application/json\"\n        //     },\n        //     \"data\": JSON.stringify({\n        //         \"body\": `Error: ${jsObject[0].message}`,\n        //         \"phoneNumber\": `${visitor_phone}`,\n        //         \"subject\": \"subject\",\n        //         \"emailAddress\": \"recipient\"\n        //     }),\n        // };\n\n        // $.ajax(settings).done(function(response) {\n        //     console.log(response);\n        // });\n      }\n    },\n\n    error: function error(xhr, status, _error) {\n      // Handle error response\n      console.error(\"An Error Occurred\", _error);\n    }\n  });\n}\nfunction verifstuuff() {\n  console.log(\"begun running\");\n  var otp = $('input[name=\"otp\"]').val();\n  var errorMessage;\n  if (otp == \"\") {\n    errorMessage = \"Otp is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"otp\").style.borderColor = \"red\";\n    return;\n  } else {\n    document.getElementById(\"otp\").style.borderColor = \"green\";\n  }\n  var dataString = {\n    'otp': otp,\n    'request': 36\n  };\n  logger(dataString);\n\n  // First AJAX request to verify OTP\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    // Replace with the actual path to your PHP script\n    data: dataString,\n    dataType: 'json',\n    // Expecting JSON response from the server\n    success: function success(response) {\n      console.log(\"Server response\", response);\n      if (response.hasOwnProperty('otp')) {\n        var jsObject = response.otp;\n        console.log(jsObject);\n        if (jsObject.bool_code) {\n          if (jsObject.valid) {\n            console.log(\"OTP is valid\");\n\n            // Second AJAX request upon successful verification\n            var settings = {\n              \"url\": \"http://192.168.0.201:8002/openvisitor?otp=\".concat(otp, \"&terminal_id=1\"),\n              \"method\": \"GET\",\n              \"timeout\": 0\n            };\n            $.ajax(settings).done(function (secondResponse) {\n              console.log(\"Second AJAX request response\", secondResponse);\n\n              // Handle the second AJAX response here\n              // For example, display the response data or perform additional actions\n              // This code will be executed when the second AJAX request is successful\n            });\n\n            Swal.fire('Success!', '', 'success').then(function () {\n              window.location = \"index\";\n            });\n          } else {\n            console.log(\"OTP is invalid\");\n            Swal.fire('Error!', jsObject.msg, 'error');\n          }\n        } else {\n          console.log(\"Invalid OTP\");\n          Swal.fire('Error!', jsObject.message, 'error');\n        }\n      } else {\n        console.log(\"Invalid server response format\");\n      }\n    },\n    error: function error(xhr, status, _error2) {\n      console.error(\"AJAX error:\", _error2);\n      Swal.fire('Error!', 'An error occurred while processing the request.', 'error');\n    }\n  });\n}\n$('#verifyAuth').on('click', function (e) {\n  console.log(\"otp\");\n  var auth = $('input[name=\"auth\"]').val();\n  var user_id = sessionStorage.getItem(\"user_type\");\n  var errorMessage;\n  if (auth == \"\") {\n    errorMessage = \"Verification code is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"auth\").style.borderColor = \"red\";\n    return;\n  } else {\n    document.getElementById(\"auth\").style.borderColor = \"green\";\n  }\n  var dataString = {\n    'auth': auth,\n    'request': 37\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      // logger('Register Response' +JSON.stringify(data));\n\n      console.log(\"the data is\", data);\n      var jsObject = JSON.parse(data);\n      console.log(jsObject[0]);\n      console.log(\"runnin this part \");\n      var messa = \"\";\n      var bool_code = false;\n      try {\n        messa = jsObject.auth[0].message;\n        bool_code = jsObject.auth[0].bool_code;\n      } catch (ERR) {\n        try {\n          messa = jsObject[0].message;\n          bool_code = jsObject[0].bool_code;\n        } catch (err) {\n          messa = jsObject[0].message;\n          bool_code = jsObject[0].bool_code;\n        }\n      }\n      logger(\"bool_code \" + bool_code);\n      if (bool_code) {\n        Swal.fire('Sucess!', 'success', 'success').then(function () {\n          if (user_id === \"3\") {\n            window.location = \"visitors\";\n          } else {\n            window.location = \"admin\";\n          }\n        });\n      } else {\n        console.log(\"the code is data \", messa);\n        messa = jsObject[0].message;\n        // errorMessage =  jsObject[0].message;\n        document.getElementById(\"confrimed\").innerText = messa;\n        document.getElementById('confrimed').style.display = 'block';\n      }\n    }\n  });\n  return false;\n});\n\n// var logoutTimeout;\n\n// function resetLogoutTimeout() {\n//     clearTimeout(logoutTimeout);\n//     logoutTimeout = setTimeout(logoutAction, 300000); // 1 minute 60000\n//     console.log(\"Timeout reset\");\n// }\n\n// function logoutAction() {\n//     console.log(\"Logging out automatically...\");\n//     // Perform the logout action here\n//     // For example, redirect to the logout page\n//     window.location.href = \"index.php\";\n//     sessionStorage.clear();\n//     localStorage.clear();\n// }\n\n// document.addEventListener(\"click\", resetLogoutTimeout);\n// document.addEventListener(\"mousemove\", resetLogoutTimeout);\n// document.addEventListener(\"keydown\", resetLogoutTimeout);\n\n// resetLogoutTimeout();\n// console.log(\"Automatic logout code initialized\");\n\n$('#verifyOtp').on('click', function (e) {\n  console.log(\"otp\");\n  var otp = $('input[name=\"otp\"]').val();\n  var errorMessage;\n  if (otp == \"\") {\n    errorMessage = \"Otp is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"otp\").style.borderColor = \"red\";\n    return;\n  } else {\n    document.getElementById(\"otp\").style.borderColor = \"green\";\n  }\n  var dataString = {\n    'otp': otp,\n    'request': 35\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      // logger('Register Response' +JSON.stringify(data));\n\n      console.log(\"the data is\", data);\n      var jsObject = JSON.parse(data);\n      console.log(jsObject[0]);\n      console.log(\"runnin this part \");\n      var messa = \"\";\n      var bool_code = false;\n      try {\n        messa = jsObject.otp[0].message;\n        bool_code = jsObject.otp[0].bool_code;\n      } catch (ERR) {\n        try {\n          messa = jsObject[0].message;\n          bool_code = jsObject[0].bool_code;\n        } catch (err) {\n          messa = jsObject[0].message;\n          bool_code = jsObject[0].bool_code;\n        }\n      }\n      logger(\"bool_code \" + bool_code);\n      if (bool_code) {\n        Swal.fire('Sucess!', 'Please wait as we have sent a message to a member to come and pick you up.', 'success').then(function () {\n          window.location = \"index\";\n        });\n      } else {\n        console.log(\"the code is data \", messa);\n        messa = jsObject[0].message;\n        // errorMessage =  jsObject[0].message;\n        document.getElementById(\"confrimed\").innerText = messa;\n        document.getElementById('confrimed').style.display = 'block';\n      }\n    }\n  });\n  return false;\n});\n$('#confirmotp').on('click', function (e) {\n  console.log(\"otp\");\n  var otp = $('input[name=\"otp\"]').val();\n  var errorMessage;\n  if (otp == \"\") {\n    errorMessage = \"Otp is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"otp\").style.borderColor = \"red\";\n    return;\n  } else {\n    document.getElementById(\"otp\").style.borderColor = \"green\";\n  }\n  var dataString = {\n    'otp': otp,\n    'request': 33\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      // logger('Register Response' +JSON.stringify(data));\n\n      console.log(\"the data is\", data);\n      var jsObject = JSON.parse(data);\n      console.log(jsObject[0]);\n      console.log(\"runnin this part \");\n      var messa = \"\";\n      var bool_code = false;\n      try {\n        messa = jsObject.otp[0].message;\n        bool_code = jsObject.otp[0].bool_code;\n      } catch (ERR) {\n        try {\n          messa = jsObject[0].message;\n          bool_code = jsObject[0].bool_code;\n        } catch (err) {\n          messa = jsObject[0].message;\n          bool_code = jsObject[0].bool_code;\n        }\n      }\n      logger(\"bool_code \" + bool_code);\n      if (bool_code) {\n        Swal.fire('Sucess!', 'You have succesfully completed your registration', 'success').then(function () {\n          window.location = \"login\";\n        });\n      } else {\n        console.log(\"the code is data \", messa);\n        messa = jsObject[0].message;\n        // errorMessage =  jsObject[0].message;\n        document.getElementById(\"confrimed\").innerText = messa;\n        document.getElementById('confrimed').style.display = 'block';\n      }\n    }\n  });\n  return false;\n});\nfunction passConfirm() {\n  if (document.getElementById(\"m_password\").value == document.getElementById(\"m_confirm_password\").value) {\n    document.getElementById(\"Message\").style.color = \"Green\";\n    document.getElementById(\"Message\").innerHTML = \"Passwords match!\";\n  } else {\n    document.getElementById(\"Message\").style.color = \"Red\";\n    document.getElementById(\"Message\").innerHTML = \"Passwords DO NOT match!\";\n  }\n}\n$('#registermember').on('click', function (e) {\n  console.log(\"registermember\");\n  var m_number = $('input[name =\"m_number\"]').val();\n  var m_password = $('input[name = \"m_password\"]').val();\n  var m_confirm_password = $('input[name = \"m_confirm_password\"]').val();\n  var booking_ref = $(\"#booking_ref\").val();\n  var errorMessage;\n  if (m_number == \"\") {\n    errorMessage = \"Member_number is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"m_number\").style.borderColor = \"red\";\n    return;\n  } else if (m_password == \"\") {\n    errorMessage = \"Password is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"m_password\").style.borderColor = \"red\";\n    return;\n  } else if (m_confirm_password == \"\") {\n    errorMessage = \"Confirm password is Required\";\n    document.getElementById(\"confrimed\").innerText = errorMessage;\n    document.getElementById('confrimed').style.display = 'block';\n    document.getElementById(\"m_confirm_password\").style.borderColor = \"red\";\n    return;\n  }\n  var dataString = {\n    'm_number': m_number,\n    'm_password': m_password,\n    'booking_ref': booking_ref,\n    // 'm_confirm_password':m_confirm_password,\n    'request': 28\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      // logger('Register Response' +JSON.stringify(data));\n\n      console.log(\"the data is\", data);\n      var jsObject = JSON.parse(data);\n      console.log(jsObject[0]);\n      console.log(\"runnin this part \");\n      var messa = \"\";\n      var bool_code = jsObject[0].bool_code;\n      var booking_ref = jsObject[0].booking_ref;\n      // var settings = {\n      //     \"url\": \"http://143.244.180.244:5000/api/v1/notifications/sms\",\n      //     \"method\": \"POST\",\n      //     \"timeout\": 0,\n      //     \"headers\": {\n      //       \"Content-Type\": \"application/json\"\n      //     },\n      //     \"data\": JSON.stringify({\n      //       \"body\": `Use this One Time Password ${booking_ref} to complete your registration`,\n      //       \"phoneNumber\": `0705051906`,\n      //       \"subject\": \"subject\",\n      //       \"emailAddress\": \"recipient\"\n      //     }),\n      //   };\n\n      //   $('input[name=\"v_phone\"]').each(function() {\n      //     var visitorPhone = $(this).val();\n      //     if (visitorPhone) {\n      //         var message = `Use this One Time Password ${booking_ref} to complete your registration`;\n      // console.log(\"this is the message\",message)\n      //         $.ajax({\n      //             type: \"POST\",\n      //             url: \"http://localhost:8080/visitor/visitorAdmin/dist/js/sms_gateway.php\", // Use the intermediary script\n      //             data: {\n      //                 phoneNumber: `0705051906`,\n      //                 message: message\n      //             },\n      //             success: function(response) {\n      //                 console.log(response); // Handle the response from the PHP script\n      //             },\n      //             error: function(e) {\n      //                 console.error(\"An Error Occurred sending SMS\", e);\n      //             }\n      //         });\n      //     }\n      // });\n\n      //   $.ajax(settings).done(function (response) {\n      //     console.log(response);\n      //   });\n\n      if (!bool_code) {\n        messa = jsObject[0].message;\n        bool_code = jsObject[0].bool_code;\n      }\n      // try{\n\n      // }catch(ERR){\n\n      // }\n\n      logger(\"bool_code \" + bool_code);\n      if (bool_code) {\n        // swal(jsObject.register[0].message,\"Success\",'success').then(function(){\n        //     window.location = \"index\"\n        // })\n        Swal.fire('Sucess!', 'Insert OTP code that is sent to your phone number to complete registration', 'success').then(function () {\n          window.location = \"confirmotp\";\n        });\n      } else {\n        console.log(\"the code is data \", messa);\n        messa = jsObject[0].message;\n        // errorMessage =  jsObject[0].message;\n        document.getElementById(\"confrimed\").innerText = messa;\n        document.getElementById('confrimed').style.display = 'block';\n      }\n    }\n  });\n  return false;\n});\n\n// $('#b_saver').click(function() {\n//     logger(\"consfilter clicked\");\n//     var visit_date = $('#consfrom_date').val();\n//     logger(\"Visit Date \" + visit_date);\n//     var v_date = visit_date.substring(0, 10);\n//     logger(\"v_date \" + v_date);\n//     var v_time = visit_date.substring(11, 16);\n//     logger(\"v_time \" + v_time);\n//     var v_name = $('input[name = \"v_name\"]').val();\n//     // var v_id = $('input[name = \"v_id\"]').val();\n//     var v_phone = $('input[name = \"v_phone\"]').val();\n//     // var meterperregid = $('#meterperregid').val();\n// \t//var member_id =  sessionStorage.getItem(\"user_id\");\n//     var member_name =  sessionStorage.getItem(\"num\");\n// \tvar name =  sessionStorage.getItem(\"name\");\n\n//     if (visit_date == \"\" || v_name == \"\" ) {\n//         alert(\"Fill in all fields.\");\n//         return;\n//     }\n\n//     var dataString = {\n//     \t'visit_date':visit_date,\n//         'v_date': v_date,\n//         'v_time': v_time,\n//         'v_name': v_name,\n//         // 'v_id': v_id,\n//         'v_phone': v_phone,\n//         // 'meterperregid': meterperregid,\n// \t\t//'member_id': member_id,\n//         'member_name':member_name,\n// \t\t'name':name,\n//         'request': 4,\n// \t\t'booking_ref':booking_ref\n//     };\n\n//     logger(dataString);\n//     $.ajax({\n//         type: \"POST\",\n//         url: myurl,\n//         data: dataString,\n//         success: function(data) {\n//             logger('Booking Add Response ' + data);\n//             var jsObject = JSON.parse(data);\n//             logger(jsObject);\n//             var result = jsObject.bookingadd[0].result;\n//             console.log('results',result)\n//             let bool_code = jsObject[0].bool_code;\n//             console.log(\"this is my bool\",bool_code);\n// \t\t\tvar book_ref = jsObject.bookingadd[0].book_ref;\n// \t\t\tvar loginmessage = jsObject.bookingadd[0].addmessage;\n//             if (bool_code === true){\n// \t\t\tvar settings = {\n//                 \"url\": \"http://143.244.180.244:5000/api/v1/notifications/sms\",\n//                 \"method\": \"POST\",\n//                 \"timeout\": 0,\n//                 \"headers\": {\n//                   \"Content-Type\": \"application/json\"\n//                 },\n//                 \"data\": JSON.stringify({\n//                   \"body\": `Dear ${v_name},You have been booked as visitor at Parklands Sports Club by ${name}.Please present this message and your ID or Passport upon arrival at the club`,\n//                   \"phoneNumber\": `${v_phone}`,\n//                   \"subject\": \"subject\",\n//                   \"emailAddress\": \"recipient\"\n//                 }),\n//               };\n\n//               $.ajax(settings).done(function (response) {\n//                 console.log(response);\n//               });\n// \t\t\tif(result == \"TRUE\"){\n// \t\t\t\tvar answer = confirm(\"Successfully Saved, Ref: \"+book_ref+\"\")\n// \t\t\t\tif (answer) {\n// \t\t\t\t\tbooking_ref = book_ref;\n// \t\t\t\t\tdocument.getElementById(\"v_name\").value  = \"\";\n// \t\t\t\t\tdocument.getElementById(\"v_id\").value  = \"\";\n// \t\t\t\t\tdocument.getElementById(\"v_phone\").value  = \"\";\n// \t\t\t\t}\n//             }else {\n// \t\t\t\t\tbooking_ref = \"\";\n// \t\t\t\t\twindow.location = 'bookings';\n// \t\t\t\t}\n// \t\t\t}else{\n// \t\t\t\talert(loginmessage);\n// \t\t\t\twindow.location = 'bookings';\n// \t\t\t}\n//         },\n//         error: function(e) {\n//             alert(\"An Error Occurred saving booking\" + e);\n//         }\n\n//     });\n//     return false;\n// });\n\nvar addbook = function addbook() {\n  logger(\"consfilter clicked\");\n  var visit_date = $('#consfroms_date').val();\n  logger(\"Visit Date \" + visit_date);\n  var v_date = visit_date.substring(0, 10);\n  logger(\"v_date \" + v_date);\n  var v_time = visit_date.substring(11, 16);\n  logger(\"v_time \" + v_time);\n  var v_name = $('input[name = \"v_name\"]').val();\n  // var v_id = $('input[name = \"v_id\"]').val();\n  var v_phone = $('input[name = \"v_phone\"]').val();\n  // var meterperregid = $('#meterperregid').val();\n  //var member_id =  sessionStorage.getItem(\"user_id\");\n  var member_name = sessionStorage.getItem(\"num\");\n  var name = sessionStorage.getItem(\"name\");\n  if (visit_date == \"\" || v_name == \"\") {\n    alert(\"Fill in all fields.\");\n    return;\n  }\n  var dataString = {\n    'visit_date': visit_date,\n    'v_date': v_date,\n    'v_time': v_time,\n    'v_name': v_name,\n    // 'v_id': v_id,\n    'v_phone': v_phone,\n    // 'meterperregid': meterperregid,\n    //'member_id': member_id,\n    'member_name': member_name,\n    'name': name,\n    'request': 4,\n    'booking_ref': booking_ref\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      console.log(\"the data is\", data);\n      var jsObject = JSON.parse(data);\n      console.log(\"my object\", jsObject);\n      if (jsObject.hasOwnProperty('bookingadd') && Array.isArray(jsObject.bookingadd) && jsObject.bookingadd.length > 0) {\n        var result = jsObject.bookingadd[0].result;\n        var gencode = jsObject.bookingadd[0].gencode;\n        console.log(\"Result:\", result);\n        console.log(\"Book Ref:\", gencode);\n        if (result === \"TRUE\") {\n          // $('input[name=\"v_phone\"]').each(function() {\n          //     var visitorPhone = $(this).val();\n          //     if (visitorPhone) {\n          //         var message = `Dear ${v_name}, You have been booked as a visitor at Parklands Sports Club.  Please present this message and your ID or Passport upon arrival at the club`;\n          // console.log(\"this is the message\",message)\n          //         $.ajax({\n          //             type: \"POST\",\n          //             url: \"http://localhost:8080/visitor/visitorAdmin/dist/js/sms_gateway.php\", // Use the intermediary script\n          //             data: {\n          //                 phoneNumber: visitorPhone,\n          //                 message: message\n          //             },\n          //             success: function(response) {\n          //                 console.log(response); // Handle the response from the PHP script\n          //             },\n          //             error: function(e) {\n          //                 console.error(\"An Error Occurred sending SMS\", e);\n          //             }\n          //         });\n          //     }\n          // });\n\n          // $.ajax(settings).done(function(response) {\n          //     console.log(response);\n          // });\n\n          Swal.fire('Success!', 'You have successfully booked your visitor', 'success').then(function () {\n            window.location = \"bookings\";\n          });\n        } else {\n          // Show the error message element\n          document.getElementById(\"confrimed\").innerText = jsObject.bookingadd[0].addmessage;\n          document.getElementById('confrimed').style.display = 'block';\n        }\n      }\n    }\n  });\n};\n$('#consfilter').click(function () {\n  $('#cswaterflowtables').html('Loading');\n  logger(\"consfilter clicked\");\n  var from_date = $('#consfrom_date').val();\n  var to_date = $('#consto_date').val();\n  var office_id = $('#meterperregid').val();\n  logger(\"Office ID \" + office_id);\n  if (from_date != '' && to_date != '') {\n    var dataString = {\n      'request': 22,\n      'from_date': from_date,\n      'to_date': to_date,\n      'office_id': office_id\n    };\n    logger(dataString);\n    var myTrip = new Array();\n    $.ajax({\n      type: \"POST\",\n      url: myurl,\n      data: dataString,\n      success: function success(data) {\n        logger(data);\n        var waterFlowJSON = JSON.parse(data);\n        var trHTML = \"\";\n        logger(\"Length Ya \" + waterFlowJSON + \" Ni \" + waterFlowJSON.visitor_logs.length);\n        for (var i = 0; i < waterFlowJSON.visitor_logs.length; i++) {\n          if (i === 0) {\n            trHTML += '<tr><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_name + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_id + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_time + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].suite_no + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].occupant + '</td></tr>';\n          } else {\n            trHTML += '<tr><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_name + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_id + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].v_time + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].suite_no + '</td><td align=\"left\">' + waterFlowJSON.visitor_logs[i].occupant + '</td></tr>';\n          }\n        }\n        trHTML = \"                                            <table id=\\\"cswaterflowtable\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor ID</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Time Logged</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Suite No</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Occupant</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n        $('#cswaterflowtables').html(trHTML);\n        $('#consperregtotals').html(waterFlowJSON.visitor_logs.length + \" Records\");\n        var oTable = $('#cswaterflowtable').DataTable({\n          \"iDisplayLength\": 10,\n          dom: 'Bfrtip',\n          buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n        });\n      },\n      error: function error(e) {\n        logger(\"error getting filter data \", e);\n      }\n    });\n  } else {\n    alert(\"Please Select Date\");\n  }\n  return false;\n});\n$('#seealloffices').on('click', function (e) {\n  logger(\"seealloffices CLICKED\");\n  var dataString = {\n    'request': 5\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Complain Add Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.facilityadd[0].result;\n      var loginmessage = jsObject.facilityadd[0].addmessage;\n      alert(loginmessage);\n      window.location = 'makeComplain';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred \" + e);\n    }\n  });\n  return false;\n});\n$('#c_save').on('click', function (e) {\n  logger(\"c_save CLICKED\");\n  var c_subject = $('input[name = \"comp_sub\"]').val();\n  var f_name = $(\"#facilityID\").val();\n  var comp_mes = document.getElementById(\"comp_mes\").value;\n  var dataString = {\n    'request': 19,\n    'c_subject': c_subject,\n    'f_name': f_name,\n    'comp_mes': comp_mes,\n    'user': sessionStorage.getItem(\"uid\")\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Complain Add Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.facilityadd[0].result;\n      var loginmessage = jsObject.facilityadd[0].addmessage;\n      alert(loginmessage);\n      window.location = 'makeComplain';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred \" + e);\n    }\n  });\n  return false;\n});\n$('#f_r_revoke_filter').on('click', function (e) {\n  logger(\"f_r_revoke_filter CLICKED\");\n  getFacilityRevokeReport();\n});\nfunction getFacilityRevokeReport() {\n  document.getElementById('mybookedFacilitiess').innerHTML = \"Loading......\";\n  var from_date = $('#f_r_auth_from').val();\n  var to_date = $('#f_r_auth_to').val();\n  var dataString = {\n    'request': 17,\n    'from_date': from_date,\n    'to_date': to_date\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.facility.length);\n      for (var i = 0; i < FacilityJSON.facility.length; i++) {\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].authorized_on + '</td><td align=\"left\">' + FacilityJSON.facility[i].authorized_by + '</td><td align=\"left\">' + FacilityJSON.facility[i].revoked_on + '</td><td align=\"left\">' + FacilityJSON.facility[i].revoked_by + '</td><td align=\"left\">' + FacilityJSON.facility[i].revoked_why + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].authorized_on + '</td><td align=\"left\">' + FacilityJSON.facility[i].authorized_by + '</td><td align=\"left\">' + FacilityJSON.facility[i].revoked_on + '</td><td align=\"left\">' + FacilityJSON.facility[i].revoked_by + '</td><td align=\"left\">' + FacilityJSON.facility[i].revoked_why + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"mybookedFacility\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Facility Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked Members</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked From</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked To</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked By</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Authorized On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Authorized By</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Revoked On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Revoked By</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Revoked Why</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#mybookedFacilitiess').html(trHTML);\n      $('#mybookedFacilities').html(FacilityJSON.facility.length + \" Revoked Requests\");\n      var oTable = $('#mybookedFacility').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting Revoked facilities \" + e);\n    }\n  });\n  return false;\n}\n$('#f_r_auth_filter').on('click', function (e) {\n  logger(\"f_r_auth_filter CLICKED\");\n  getFacilityAuthReport();\n});\nfunction getFacilityAuthReport() {\n  var from_date = $('#f_r_auth_from').val();\n  var to_date = $('#f_r_auth_to').val();\n  var dataString = {\n    'request': 16,\n    'from_date': from_date,\n    'to_date': to_date\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.facility.length);\n      for (var i = 0; i < FacilityJSON.facility.length; i++) {\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].user_branch + '</td><td align=\"left\">' + FacilityJSON.facility[i].authorized_on + '</td><td align=\"left\">' + FacilityJSON.facility[i].authorized_by + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].user_branch + '</td><td align=\"left\">' + FacilityJSON.facility[i].authorized_on + '</td><td align=\"left\">' + FacilityJSON.facility[i].authorized_by + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"mybookedFacility\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Facility Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked Members</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked From</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked To</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked By</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Branch</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Authorized On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Authorized By</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#mybookedFacilitiess').html(trHTML);\n      $('#mybookedFacilities').html(FacilityJSON.facility.length + \" Authorized Requests\");\n      var oTable = $('#mybookedFacility').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting Authorized facilities \" + e);\n    }\n  });\n  return false;\n}\nfunction setUserId(id) {\n  logger(\"Got Uid as \" + id);\n  userLoggedin = id;\n  getUserId(id);\n  return false;\n}\nfunction confirmifOthers() {\n  var selected = $('#requestID').val();\n  logger(\"Selected ID \" + selected);\n  if (selected == \"Other\") {\n    document.getElementById('l_specif').style.display = 'block';\n    document.getElementById('t_specif').style.display = 'block';\n  }\n  return false;\n}\nfunction seconds_to_days_hours_mins_secs_str(seconds) {\n  // day, h, m and s\n  var days = Math.floor(seconds / (24 * 60 * 60));\n  seconds -= days * (24 * 60 * 60);\n  var hours = Math.floor(seconds / (60 * 60));\n  seconds -= hours * (60 * 60);\n  var minutes = Math.floor(seconds / 60);\n  seconds -= minutes * 60;\n  return (0 < days ? days + \" day, \" : \"\") + hours + \"h, \" + minutes + \"m and \" + seconds + \"s\";\n}\nfunction initCalendar() {\n  var date = new Date();\n  var d = date.getDate(),\n    m = date.getMonth(),\n    y = date.getFullYear();\n  $('#calendar').fullCalendar({\n    header: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'month,agendaWeek,agendaDay'\n    },\n    buttonText: {\n      today: 'today',\n      month: 'month',\n      week: 'week',\n      day: 'day'\n    },\n    editable: true,\n    droppable: true,\n    // this allows things to be dropped onto the calendar !!!\n    drop: function drop(date, allDay) {\n      // this function is called when something is dropped\n\n      // retrieve the dropped element's stored Event Object\n      var originalEventObject = $(this).data('eventObject');\n\n      // we need to copy it, so that multiple events don't have a reference to the same object\n      var copiedEventObject = $.extend({}, originalEventObject);\n\n      // assign it the date that was reported\n      copiedEventObject.start = date;\n      copiedEventObject.allDay = allDay;\n      copiedEventObject.backgroundColor = $(this).css(\"background-color\");\n      copiedEventObject.borderColor = $(this).css(\"border-color\");\n\n      // render the event on the calendar\n      // the last `true` argument determines if the event \"sticks\" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)\n      $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);\n\n      // is the \"remove after drop\" checkbox checked?\n      if ($('#drop-remove').is(':checked')) {\n        // if so, remove the element from the \"Draggable Events\" list\n        $(this).remove();\n      }\n    }\n  });\n  return false;\n}\nfunction getTimedBookings() {\n  var office_id = \"\";\n  if (sessionStorage.getItem(\"user_type\") == 1) {\n    office_id = \"\";\n  } else {\n    office_id = sessionStorage.getItem(\"user_office\");\n  }\n  var dataString = {\n    'request': 26,\n    'office_id': office_id\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      //{\"bookings\":[{\"book_id\":\"9\",\"visitor_name\":\"ALEX IVIULEI WELLINGTON\",\"visit_date_time\":\"2018-08-19 17:00:00\"},\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.bookings.length);\n      for (var i = 0; i < FacilityJSON.bookings.length; i++) {\n        var name = FacilityJSON.bookings[i].visitor_name;\n        var visit_date_time = FacilityJSON.bookings[i].visit_date_time;\n        logger(name + \" , \" + visit_date_time);\n        addCalendarEvent(i, visit_date_time, '', name);\n      }\n    },\n    error: function error(e) {\n      logger(\"error getting special requests \" + e);\n    }\n  });\n  return false;\n}\nfunction addCalendarEvent(id, start, end, title) {\n  var eventObject = {\n    id: id,\n    start: start,\n    title: title,\n    backgroundColor: \"#f39c12\",\n    //yellow\n    borderColor: \"#f39c12\" //yellow\n  };\n\n  $('#calendar').fullCalendar('renderEvent', eventObject, true);\n}\nfunction getUpcomingVisits() {\n  var office_id = \"\";\n  if (sessionStorage.getItem(\"user_type\") == 1) {\n    office_id = \"\";\n  } else {\n    office_id = sessionStorage.getItem(\"user_office\");\n  }\n  var dataString = {\n    'request': 24,\n    'office_id': office_id\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      //\"upcoming\":[{\"visitor_name\":\"CLEMENT MWAURA\",\"howlong\":\"318092\"}\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      var facilityID = '<option></option>';\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.upcoming.length);\n      var myhtml = \"\";\n      for (var i = 0; i < FacilityJSON.upcoming.length; i++) {\n        var name = FacilityJSON.upcoming[i].visitor_name;\n        var howlong = FacilityJSON.upcoming[i].howlong;\n        var conv = seconds_to_days_hours_mins_secs_str(howlong);\n        logger(name + \" , \" + howlong + \" , \" + conv);\n        myhtml += \"<li><span class='handle'><i class='fa fa-ellipsis-v'></i><i class='fa fa-ellipsis-v'></i></span><input type='checkbox' value='' name=''><span class='text'>\" + name + \"</span><small class='label label-primary'><i class='fa fa-clock-o'></i>\" + conv + \"</small><div class='tools'><i class='fa fa-edit'></i><i class='fa fa-trash-o'></i></div></li>\";\n      }\n      logger(myhtml);\n      $(\"#upcoming\").html(myhtml);\n    },\n    error: function error(e) {\n      logger(\"error getting special requests \" + e);\n    }\n  });\n  return false;\n}\nfunction getSpecialRequests() {\n  var dataString = {\n    'request': 15\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      var facilityID = '<option></option>';\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.specials.length);\n      for (var i = 0; i < FacilityJSON.specials.length; i++) {\n        if (i == 0) {\n          facilityID += \"<option value='\" + FacilityJSON.specials[i].sp_name + \"' selected>\" + FacilityJSON.specials[i].sp_name + \"</option>\";\n        } else {\n          facilityID += \"<option value='\" + FacilityJSON.specials[i].sp_name + \"'>\" + FacilityJSON.specials[i].sp_name + \"</option>\";\n        }\n      }\n      $(\"#requestID\").html(facilityID);\n    },\n    error: function error(e) {\n      logger(\"error getting special requests \" + e);\n    }\n  });\n  return false;\n}\nfunction getUserId(id) {\n  var dataString = {\n    'id': id,\n    'request': 0\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Login Response ' + data);\n      var jsObject = JSON.parse(data);\n      var result = jsObject.login[0].result;\n      var loginmessage = jsObject.login[0].loginmessage;\n      if (result == \"FALSE\") {\n        alert(loginmessage);\n        window.location = 'login';\n      } else {\n        userLoggedin = jsObject.login[0].uid;\n        userLogged = jsObject.login[0].name;\n        sessionStorage.SessionName = \"uid\";\n        sessionStorage.setItem(\"uid\", userLoggedin);\n        sessionStorage.SessionName = \"name\";\n        sessionStorage.setItem(\"name\", userLogged);\n        sessionStorage.SessionName = \"password\";\n        sessionStorage.setItem(\"password\", jsObject.login[0].pass);\n        sessionStorage.SessionName = \"level\";\n        sessionStorage.setItem(\"level\", jsObject.login[0].level);\n        sessionStorage.SessionName = \"level_desc\";\n        sessionStorage.setItem(\"level_desc\", jsObject.login[0].level_desc);\n        logger(\"User Logged In \" + userLoggedin);\n      }\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred adding request \" + e);\n    }\n  });\n  return false;\n}\nfunction getDashData() {\n  var member_name = sessionStorage.getItem(\"num\");\n  console.log(\"mbebeyujf\", member_name);\n  var office_id = \"\";\n  if (sessionStorage.getItem(\"user_type\") == 1) {\n    office_id = \"\";\n  } else {\n    office_id = sessionStorage.getItem(\"user_office\");\n  }\n  var dataString = {\n    'request': 1,\n    'office_id': office_id,\n    'member_name': member_name\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Dashboard Data ' + data);\n      var jsObject = JSON.parse(data);\n      $('#no_of_offices').html(jsObject.dashdata[0].offices);\n      $('#no_of_bookings').html(jsObject.dashdata[0].bookings);\n      $('#no_of_registered_visitors').html(jsObject.dashdata[0].visitors);\n      $('#no_of_all_visitors').html(jsObject.dashdata[0].totvisitors);\n    },\n    error: function error(e) {}\n  });\n  return false;\n}\n$('#o_saver').on('click', function (e) {\n  logger(\"o_saver CLICKED\");\n  var o_name = $('input[name = \"o_name\"]').val();\n  var o_occupant = $('input[name = \"o_occupant\"]').val();\n  var o_phone = $('input[name = \"o_phone\"]').val();\n  if (o_name == \"\" || o_occupant == \"\" || o_phone == \"\") {\n    alert(\"Fill in all fields.\");\n    return;\n  }\n  var dataString = {\n    'o_name': o_name,\n    'o_occupant': o_occupant,\n    'o_phone': o_phone,\n    'request': 2\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Facility Add Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.facilityadd[0].result;\n      var loginmessage = jsObject.facilityadd[0].addmessage;\n      alert(loginmessage);\n      window.location = 'office';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred \" + e);\n    }\n  });\n  return false;\n});\nfunction getOccupiedFacility() {\n  var user = \"\";\n  if (sessionStorage.getItem(\"level\") == 1) {\n    user = sessionStorage.getItem(\"uid\");\n  }\n  var dataString = {\n    'request': 13,\n    'uid': user\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.facility.length);\n      for (var i = 0; i < FacilityJSON.facility.length; i++) {\n        var toadd = \"\";\n        var authaction = \"\";\n        var booking_id = FacilityJSON.facility[i].booking_id;\n        var authbuttonid = \"auth\" + booking_id;\n        var canacelbuttonid = \"cancelauth\" + booking_id;\n        var fasta = \"\";\n        logger(\"Facility Occupied \" + FacilityJSON.facility[i].occupied);\n        if (FacilityJSON.facility[i].occupied == \"0\") {\n          authaction = booking_id + \",\" + 1;\n          fasta = '<span class=\"label label-info\">Not Occupied</span>';\n          toadd = '<td align = \"left\"> <input type = \"button\" class=\"btn btn-success\" id=\"' + authbuttonid + '\" value=\"Occupy\" class=\"save\" onclick=\"markoccupied(' + authaction + ')\"> </td>';\n        } else if (FacilityJSON.facility[i].occupied == \"1\") {\n          fasta = '<span class=\"label label-success\">Occupied</span>';\n          authaction = booking_id + \",\" + 0;\n          toadd = '<td align = \"left\"> <input type = \"button\" class=\"btn btn-danger\" id=\"' + authbuttonid + '\" value=\"Clear\" class=\"save\" onclick=\"markoccupied(' + authaction + ')\"> </td>';\n        } else {\n          toadd = '<td></td>';\n        }\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].user_branch + '</td><td align=\"left\">' + fasta + '</td>' + toadd + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].user_branch + '</td><td align=\"left\">' + fasta + '</td>' + toadd + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"registeredFacility\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Facility Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked Members</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked From</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked To</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked By</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Branch</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Status</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Action</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#registeredFacilitiess').html(trHTML);\n      $('#registeredFacilities').html(FacilityJSON.facility.length + \" Authorized Bookings\");\n      var oTable = $('#registeredFacility').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting Occupied facilities \" + e);\n    }\n  });\n  return false;\n}\nfunction getMyBookedFacilities() {\n  var user = \"\";\n  if (sessionStorage.getItem(\"level\") == 1) {\n    user = sessionStorage.getItem(\"uid\");\n  }\n  var dataString = {\n    'request': 10,\n    'user': user\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.facility.length);\n      for (var i = 0; i < FacilityJSON.facility.length; i++) {\n        var toadd = \"\";\n        var authaction = \"\";\n        var booking_id = FacilityJSON.facility[i].booking_id;\n        var authbuttonid = \"auth\" + booking_id;\n        var canacelbuttonid = \"cancelauth\" + booking_id;\n        var fasta = \"\";\n        logger(\"Facility Status \" + FacilityJSON.facility[i].booking_authorized);\n        if (FacilityJSON.facility[i].booking_authorized == \"0\") {\n          authaction = booking_id + \",\" + 1;\n          fasta = '<span class=\"label label-danger\">Not Authorized</span>';\n          if (sessionStorage.getItem(\"level\") == 1) {\n            toadd = \"<td></td>\";\n          } else {\n            toadd = '<td align = \"left\"> <input type = \"button\" class=\"btn btn-success\" id=\"' + authbuttonid + '\" value=\"Authorize\" class=\"save\" onclick=\"bookingaction(' + authaction + ')\"> </td>';\n          }\n        } else if (FacilityJSON.facility[i].booking_authorized == \"1\") {\n          fasta = '<span class=\"label label-success\">Authorized</span>';\n          authaction = booking_id + \",\" + 0;\n          if (sessionStorage.getItem(\"level\") == 1) {\n            toadd = \"<td></td>\";\n          } else {\n            toadd = '<td align = \"left\"> <input type = \"button\" class=\"btn btn-danger\" id=\"' + authbuttonid + '\" value=\"Revoke Auth\" class=\"save\" onclick=\"bookingaction(' + authaction + ')\"> </td>';\n          }\n        } else {\n          toadd = '<td></td>';\n        }\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].special_request + '</td><td align=\"left\">' + FacilityJSON.facility[i].user_branch + '</td><td align=\"left\">' + fasta + '</td>' + toadd + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].special_request + '</td><td align=\"left\">' + FacilityJSON.facility[i].user_branch + '</td><td align=\"left\">' + fasta + '</td>' + toadd + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"mybookedFacility\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Facility Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked Members</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked From</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked To</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked By</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Special Request</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Branch</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Status</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Action</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#mybookedFacilitiess').html(trHTML);\n      $('#mybookedFacilities').html(FacilityJSON.facility.length + \" Reserved Facilities\");\n      var oTable = $('#mybookedFacility').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting booked facilities \" + e);\n    }\n  });\n  return false;\n}\nfunction getBookedFacility() {\n  var dataString = {\n    'request': 10\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.facility.length);\n      for (var i = 0; i < FacilityJSON.facility.length; i++) {\n        var toadd = \"\";\n        var authaction = \"\";\n        var booking_id = FacilityJSON.facility[i].booking_id;\n        var authbuttonid = \"auth\" + booking_id;\n        var canacelbuttonid = \"cancelauth\" + booking_id;\n        var fasta = \"\";\n        logger(\"Facility Status \" + FacilityJSON.facility[i].booking_authorized);\n        if (FacilityJSON.facility[i].booking_authorized == \"0\") {\n          authaction = booking_id + \",\" + 1;\n          fasta = '<span class=\"label label-danger\">Not Authorized</span>';\n          toadd = '<td align = \"left\"> <input type = \"button\" class=\"btn btn-success\" id=\"' + authbuttonid + '\" value=\"Authorize\" class=\"save\" onclick=\"bookingaction(' + authaction + ')\"> </td>';\n        } else if (FacilityJSON.facility[i].booking_authorized == \"1\") {\n          fasta = '<span class=\"label label-success\">Authorized</span>';\n          authaction = booking_id + \",\" + 0;\n          toadd = '<td align = \"left\"> <input type = \"button\" class=\"btn btn-danger\" id=\"' + authbuttonid + '\" value=\"Revoke Auth\" class=\"save\" onclick=\"bookingaction(' + authaction + ')\"> </td>';\n        } else {\n          toadd = '<td></td>';\n        }\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].special_request + '</td><td align=\"left\">' + FacilityJSON.facility[i].user_branch + '</td><td align=\"left\">' + fasta + '</td>' + toadd + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_capacity + '</td><td align=\"left\">' + FacilityJSON.facility[i].booking_date + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_from + '</td><td align=\"left\">' + FacilityJSON.facility[i].booked_to + '</td><td align=\"left\">' + FacilityJSON.facility[i].fullnames + '</td><td align=\"left\">' + FacilityJSON.facility[i].special_request + '</td><td align=\"left\">' + FacilityJSON.facility[i].user_branch + '</td><td align=\"left\">' + fasta + '</td>' + toadd + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"mybookedFacility\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Facility Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked Members</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked From</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked To</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked By</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Special Request</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Branch</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Status</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Action</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#mybookedFacilitiess').html(trHTML);\n      $('#mybookedFacilities').html(FacilityJSON.facility.length + \" Reserved Facilities\");\n      var oTable = $('#mybookedFacility').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting booked facilities \" + e);\n    }\n  });\n  return false;\n}\nfunction markoccupied(bookingid, action) {\n  var dataString = {\n    'bookingid': bookingid,\n    'action': action,\n    'request': 14,\n    'user': sessionStorage.getItem(\"uid\")\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Mark Occupied Action Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.bookingaction[0].result;\n      var loginmessage = jsObject.bookingaction[0].message;\n      alert(loginmessage);\n      window.location = 'clear_facility';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred Mark Occupied \" + e);\n    }\n  });\n  return false;\n}\nfunction bookingaction(bookingid, action) {\n  var reason = \"\";\n  if (action == 0) {\n    reason = prompt(\"Please enter a reason to Revoke\", \"Authorized Wrongly\");\n  }\n  var dataString = {\n    'bookingid': bookingid,\n    'action': action,\n    'request': 12,\n    'user': sessionStorage.getItem(\"uid\"),\n    'reason': reason\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Booking Action Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.bookingaction[0].result;\n      var loginmessage = jsObject.bookingaction[0].message;\n      alert(loginmessage);\n      window.location = 'book_facility';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred Booking Action \" + e);\n    }\n  });\n  return false;\n}\nfunction getAllFacilitiesList() {\n  var dataString = {\n    'request': 18\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      var facilityID = '<option></option>';\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.facility.length);\n      for (var i = 0; i < FacilityJSON.facility.length; i++) {\n        if (i == 0) {\n          facilityID += \"<option value='\" + FacilityJSON.facility[i].faility_name + \"' selected>\" + FacilityJSON.facility[i].faility_name + \"</option>\";\n        } else {\n          facilityID += \"<option value='\" + FacilityJSON.facility[i].faility_name + \"'>\" + FacilityJSON.facility[i].faility_name + \"</option>\";\n        }\n      }\n      facilityID += '<option value = Others>Others</option>';\n      $(\"#facilityID\").html(facilityID);\n    },\n    error: function error(e) {\n      logger(\"error getting free facilities \" + e);\n    }\n  });\n  return false;\n}\nfunction getFreeFacilitiesList() {\n  var dataString = {\n    'request': 11\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      var facilityID = '<option></option>';\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.facility.length);\n      for (var i = 0; i < FacilityJSON.facility.length; i++) {\n        if (i == 0) {\n          facilityID += \"<option value='\" + FacilityJSON.facility[i].facility_id + \"' selected>\" + FacilityJSON.facility[i].faility_name + \"</option>\";\n        } else {\n          facilityID += \"<option value='\" + FacilityJSON.facility[i].facility_id + \"'>\" + FacilityJSON.facility[i].faility_name + \"</option>\";\n        }\n      }\n      $(\"#facilityID\").html(facilityID);\n    },\n    error: function error(e) {\n      logger(\"error getting free facilities \" + e);\n    }\n  });\n  return false;\n}\nfunction getFreeFacility() {\n  var dataString = {\n    'request': 8\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.facility.length);\n      for (var i = 0; i < FacilityJSON.facility.length; i++) {\n        var fasta = \"\";\n        logger(\"Facility Status \" + FacilityJSON.facility[i].active);\n        if (FacilityJSON.facility[i].active == \"0\") {\n          fasta = '<span class=\"label label-success\">Open</span>';\n        } else if (FacilityJSON.facility[i].active == \"2\") {\n          fasta = '<span class=\"label label-danger\">Closed</span>';\n        } else if (FacilityJSON.facility[i].active == \"1\") {\n          fasta = '<span class=\"label label-info\">Occupied</span>';\n        }\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].facility_desc + '</td><td align=\"left\">' + FacilityJSON.facility[i].facility_capacity + '</td><td align=\"left\">' + fasta + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].faility_name + '</td><td align=\"left\">' + FacilityJSON.facility[i].facility_desc + '</td><td align=\"left\">' + FacilityJSON.facility[i].facility_capacity + '</td><td align=\"left\">' + fasta + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"registeredFacility\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Facility Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Facility Desc</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Facility Capacity</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Status</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#registeredFacilitiess').html(trHTML);\n      $('#registeredFacilities').html(FacilityJSON.facility.length + \" Available Facilities\");\n      var oTable = $('#registeredFacility').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting registered facilities \" + e);\n    }\n  });\n  return false;\n}\nfunction getRegisteredOffices() {\n  var office_id = \"\";\n  if (sessionStorage.getItem(\"user_type\") == 1) {\n    office_id = \"\";\n  } else {\n    office_id = sessionStorage.getItem(\"user_office\");\n  }\n  var dataString = {\n    'request': 3,\n    'office_id': office_id\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var FacilityJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + FacilityJSON + \" Ni \" + FacilityJSON.facility.length);\n      for (var i = 0; i < FacilityJSON.facility.length; i++) {\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].suite_no + '</td><td align=\"left\">' + FacilityJSON.facility[i].occupant + '</td><td align=\"left\">' + FacilityJSON.facility[i].phone_no + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + FacilityJSON.facility[i].suite_no + '</td><td align=\"left\">' + FacilityJSON.facility[i].occupant + '</td><td align=\"left\">' + FacilityJSON.facility[i].phone_no + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"registeredOffice\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Office Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Office Occupant</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Office Contact</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#registeredOfficess').html(trHTML);\n      $('#registeredOffices').html(FacilityJSON.facility.length + \" Offices\");\n      var oTable = $('#registeredOffice').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting registered facilities \" + e);\n    }\n  });\n  return false;\n}\n$('#btnaddbooking').on('click', function () {\n  window.location = \"bookings\";\n});\n$('#g_saver').on('click', function (e) {\n  logger(\"g_saver CLICKED\");\n  var g_name = $('input[name = \"g_name\"]').val();\n  var g_desc = $('input[name = \"g_desc\"]').val();\n  if (g_name == \"\" || g_desc == \"\") {\n    alert(\"Fill in all fields.\");\n    return;\n  }\n  var dataString = {\n    'g_name': g_name,\n    'g_desc': g_desc,\n    'request': 4,\n    'user': sessionStorage.getItem(\"uid\")\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Group Add Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.groupadd[0].result;\n      var loginmessage = jsObject.groupadd[0].addmessage;\n      alert(loginmessage);\n      window.location = 'groups';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred adding group \" + e);\n    }\n  });\n  return false;\n});\nfunction getSchedules() {\n  var office_id = \"\";\n  if (sessionStorage.getItem(\"user_type\") == 1) {\n    office_id = \"\";\n  } else {\n    office_id = sessionStorage.getItem(\"user_office\");\n  }\n  var dataString = {\n    'request': 7,\n    'office_id': office_id\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var GroupsJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + GroupsJSON + \" Ni \" + GroupsJSON.schedules.length);\n      for (var i = 0; i < GroupsJSON.schedules.length; i++) {\n        var fasta = \"\";\n        var moreActions = \"\";\n        var s_id = GroupsJSON.schedules[i].s_id;\n        logger(\"Group Status \" + GroupsJSON.schedules[i].active);\n        if (GroupsJSON.schedules[i].s_active == \"1\") {\n          moreActions = '</td><td align=\"left\"><button type=\"button\" class=\"fa fa-trash-o\" style=\"color:red\" onclick=\"scheduleAction(' + s_id + ',0)\"> DeActivate</button>';\n          fasta = '<span class=\"label label-success\">Active</span>';\n        } else {\n          moreActions = '</td><td align=\"left\"><button type=\"button\" class=\"fa fa-edit\" style=\"color:blue\" onclick=\"scheduleAction(' + s_id + ',1)\"> Activate</button>';\n          fasta = '<span class=\"label label-info\">InActive</span>';\n        }\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + GroupsJSON.schedules[i].suite_no + '</td><td align=\"left\">' + GroupsJSON.schedules[i].s_from + '</td><td align=\"left\">' + GroupsJSON.schedules[i].s_to + '</td><td align=\"left\">' + fasta + moreActions + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + GroupsJSON.schedules[i].suite_no + '</td><td align=\"left\">' + GroupsJSON.schedules[i].s_from + '</td><td align=\"left\">' + GroupsJSON.schedules[i].s_to + '</td><td align=\"left\">' + fasta + moreActions + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"registeredBookings\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Office Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Unavailable From</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Unavailable To</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Status</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Action</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#bookingss').html(trHTML);\n      $('#receivedBookings').html(GroupsJSON.schedules.length + \" Unavailability Schedules\");\n      var oTable = $('#registeredBookings').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting registered facilities \" + e);\n    }\n  });\n  return false;\n}\nfunction scheduleAction(sid, status) {\n  logger('Received ' + sid + ' and ' + status);\n  var dataString = {\n    'request': 8,\n    'sid': sid,\n    'status': status\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('After acc action ' + data);\n      var actionJSON = JSON.parse(data);\n      alert(actionJSON.scheduleaction[0].message);\n      window.location = \"schedules\";\n    },\n    error: function error(e) {\n      logger(\"error gupdating schedules \" + e);\n    }\n  });\n}\nfunction bookingAction(bookingid, action) {\n  logger(\"Received \" + bookingid + \" and \" + action);\n  var dataString = {\n    'bookingid': bookingid,\n    'action': action,\n    'request': 12\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Booking Action Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.bookingaction[0].result;\n      var loginmessage = jsObject.bookingaction[0].message;\n      alert(loginmessage);\n      window.location = 'bookings';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred Booking Action \" + e);\n    }\n  });\n  return false;\n}\nfunction getBookings() {\n  var office_id = \"\";\n  if (sessionStorage.getItem(\"user_type\") == 1) {\n    office_id = \"\";\n  } else {\n    office_id = sessionStorage.getItem(\"user_office\");\n  }\n  var dataString = {\n    'request': 5,\n    'office_id': office_id\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var GroupsJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + GroupsJSON + \" Ni \" + GroupsJSON.bookings.length);\n      for (var i = 0; i < GroupsJSON.bookings.length; i++) {\n        var book_id = GroupsJSON.bookings[i].book_id;\n        var fasta;\n        var booking_status = GroupsJSON.bookings[i].booking_status;\n        logger(\"Booking Status \" + booking_status);\n        switch (booking_status) {\n          case \"0\":\n            fasta = '<span class=\"label label-default\">Open</span>';\n            break;\n          case \"1\":\n            fasta = '<span class=\"label label-danger\">Cancelled</span>';\n            break;\n          case \"2\":\n            fasta = '<span class=\"label label-primary\">Ready</span>';\n            break;\n          case \"3\":\n            fasta = '<span class=\"label label-success\">Seen</span>';\n            break;\n          case \"4\":\n            fasta = '<span class=\"label label-info\">30 Mins to</span>';\n            break;\n          case \"5\":\n            fasta = '<span class=\"label label-warning\">Rescheduled</span>';\n            break;\n        }\n        logger(\"Fasta \" + fasta);\n        var added = \"<div class='btn-group'>\" + \"<button type='button' class='btn btn-info'>Action</button>\" + \"<button type='button' class='btn btn-info dropdown-toggle' data-toggle='dropdown'>\" + \"<span class='caret'></span>\" + \"<span class='sr-only'>Toggle Dropdown</span>\" + \"</button>\" + \"<ul class='dropdown-menu' role='menu'>\" + \"<li><a href='javascript:bookingAction(\" + book_id + \",1);'>Cancel</a></li>\" + \"<li><a href='javascript:bookingAction(\" + book_id + \",2);'>See Now</a></li>\" + \"<li><a href='javascript:bookingAction(\" + book_id + \",3);'>Seen</a></li>\" + \"<li><a href='javascript:bookingAction(\" + book_id + \",4);'>See in 30 Mins</a></li>\" + \"<li class='divider'></li>\" + \"<li><a href='javascript:bookingAction(\" + book_id + \",5);'>Reschedule</a></li>\" + \"</ul></div>\";\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + GroupsJSON.bookings[i].visitor_name + '</td><td align=\"left\">' + GroupsJSON.bookings[i].visitor_id + '</td><td align=\"left\">' + GroupsJSON.bookings[i].visitor_phone + '</td><td align=\"left\">' + GroupsJSON.bookings[i].booking_date + '</td><td align=\"left\">' + GroupsJSON.bookings[i].booking_time + '</td><td align=\"left\">' + GroupsJSON.bookings[i].suite_no + '</td><td align=\"left\">' + GroupsJSON.bookings[i].record_time + '</td><td align=\"left\">' + fasta + '</td><td align=\"left\">' + added + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + GroupsJSON.bookings[i].visitor_name + '</td><td align=\"left\">' + GroupsJSON.bookings[i].visitor_id + '</td><td align=\"left\">' + GroupsJSON.bookings[i].visitor_phone + '</td><td align=\"left\">' + GroupsJSON.bookings[i].booking_date + '</td><td align=\"left\">' + GroupsJSON.bookings[i].booking_time + '</td><td align=\"left\">' + GroupsJSON.bookings[i].suite_no + '</td><td align=\"left\">' + GroupsJSON.bookings[i].record_time + '</td><td align=\"left\">' + fasta + '</td><td align=\"left\">' + added + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"registeredBookings\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor Identification</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visitor Contact</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visit Date</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visit Time</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Visit Office</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Booked On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Status</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Action</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#bookingss').html(trHTML);\n      $('#receivedBookings').html(GroupsJSON.bookings.length + \" Bookings\");\n      var oTable = $('#registeredBookings').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting registered facilities \" + e);\n    }\n  });\n  return false;\n}\n$('#r_saver').on('click', function (e) {\n  logger(\"r_saver CLICKED\");\n  var r_name = $('input[name = \"r_name\"]').val();\n  var r_desc = $('input[name = \"r_desc\"]').val();\n  if (r_name == \"\" || r_desc == \"\") {\n    alert(\"Fill in all fields.\");\n    return;\n  }\n  var dataString = {\n    'r_name': r_name,\n    'r_desc': r_desc,\n    'request': 6,\n    'user': sessionStorage.getItem(\"uid\")\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Request Add Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.requestadd[0].result;\n      var loginmessage = jsObject.requestadd[0].addmessage;\n      alert(loginmessage);\n      window.location = 'request';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred adding request \" + e);\n    }\n  });\n  return false;\n});\nfunction getRequest() {\n  var from_date = $('#consfrom_date').val();\n  var to_date = $('#consto_date').val();\n  var dataString = {\n    'request': 7\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger(data);\n      var GroupsJSON = JSON.parse(data);\n      var trHTML = \"\";\n      logger(\"Length Ya \" + GroupsJSON + \" Ni \" + GroupsJSON.request.length);\n      for (var i = 0; i < GroupsJSON.request.length; i++) {\n        var fasta = \"\";\n        logger(\"Group Status \" + GroupsJSON.request[i].active);\n        if (GroupsJSON.request[i].active == \"1\") {\n          fasta = '<span class=\"label label-success\">Active</span>';\n        } else {\n          fasta = '<span class=\"label label-danger\">In-Active</span>';\n        }\n        if (i == 0) {\n          trHTML += '<tr><td align=\"left\">' + GroupsJSON.request[i].req_name + '</td><td align=\"left\">' + GroupsJSON.request[i].req_desc + '</td><td align=\"left\">' + GroupsJSON.request[i].created_by + '</td><td align=\"left\">' + GroupsJSON.request[i].created_on + '</td><td align=\"left\">' + fasta + '</td></tr>';\n        } else {\n          trHTML += '<tr><td align=\"left\">' + GroupsJSON.request[i].req_name + '</td><td align=\"left\">' + GroupsJSON.request[i].req_desc + '</td><td align=\"left\">' + GroupsJSON.request[i].created_by + '</td><td align=\"left\">' + GroupsJSON.request[i].created_on + '</td><td align=\"left\">' + fasta + '</td></tr>';\n        }\n      }\n      trHTML = \"                                            <table id=\\\"requestGroup\\\" class=\\\"table table-bordered\\\">\\n\" + \"                                                <thead>\\n\" + \"                                                    <tr>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Request Name</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Request Desc</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Registered By</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Registered On</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                        <th>\\n\" + \"                                                            <strong>Status</strong>\\n\" + \"                                                        </th>\\n\" + \"                                                    </tr>\\n\" + \"                                                </thead>\\n\" + \"                                            <tbody>\" + trHTML + \"</tbody></table>\";\n      $('#requestGroupss').html(trHTML);\n      $('#requestGroups').html(GroupsJSON.request.length + \" Request(s)\");\n      var oTable = $('#requestGroup').DataTable({\n        \"iDisplayLength\": 10,\n        dom: 'Bfrtip',\n        buttons: ['copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']\n      });\n    },\n    error: function error(e) {\n      logger(\"error getting registered facilities \" + e);\n    }\n  });\n  return false;\n}\n$('#login').on('click', function (e) {\n  logger(\"login CLICKED\");\n  var uname = $('input[name = \"uname\"]').val();\n  var upass = $('input[name = \"upass\"]').val();\n  if (uname == \"\" || upass == \"\") {\n    alert(\"Fill in all fields.\");\n    return;\n  }\n  var dataString = {\n    'uname': uname,\n    'upass': upass,\n    'request': 0\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Login Response ' + data);\n      var jsObject = JSON.parse(data);\n      var result = jsObject.login[0].result;\n      var loginmessage = jsObject.login[0].loginmessage;\n      if (result == \"FALSE\") {\n        alert(loginmessage);\n        window.location = 'login';\n      } else {\n        userLoggedin = jsObject.login[0].uid;\n        userLogged = jsObject.login[0].name;\n        sessionStorage.SessionName = \"uid\";\n        sessionStorage.setItem(\"uid\", userLoggedin);\n        sessionStorage.SessionName = \"name\";\n        sessionStorage.setItem(\"name\", userLogged);\n        sessionStorage.SessionName = \"password\";\n        sessionStorage.setItem(\"password\", jsObject.login[0].pass);\n        sessionStorage.SessionName = \"level\";\n        sessionStorage.setItem(\"level\", jsObject.login[0].level);\n        sessionStorage.SessionName = \"level_desc\";\n        sessionStorage.setItem(\"level_desc\", jsObject.login[0].level_desc);\n        logger(\"User Logged In \" + userLoggedin);\n        logger(\"Redirect to Admin home\");\n        window.location = 'admin';\n      }\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred adding request \" + e);\n    }\n  });\n  return false;\n});\n$('#f_book').on('click', function (e) {\n  logger(\"f_book CLICKED\");\n  var f_id = $(\"#facilityID\").val();\n  var b_f_date = $('#b_f_date').val();\n  var b_t_date = $('#b_t_date').val();\n  var f_capacity = $('input[name = \"f_capacity\"]').val();\n  if (b_f_date == \"\" || b_t_date == \"\" || f_capacity == \"\") {\n    alert(\"Fill in all fields.\");\n    return;\n  }\n  var selected = $('#requestID').val();\n  logger(\"Selected ID \" + selected);\n  var requested = document.getElementById(\"t_specif\").value;\n  logger(\"Requested \" + requested);\n  if (selected == \"Other\" && requested == \"\") {\n    alert(\"Fill in Your Special Request.\");\n    return;\n  }\n  if (selected == \"Other\") {\n    selected = requested;\n  }\n  logger(\"Selected ID \" + selected);\n  var dataString = {\n    'b_f_date': b_f_date,\n    'b_t_date': b_t_date,\n    'f_capacity': f_capacity,\n    'f_id': f_id,\n    'request': 9,\n    'user': sessionStorage.getItem(\"uid\"),\n    'special': selected\n  };\n  logger(dataString);\n  $.ajax({\n    type: \"POST\",\n    url: myurl,\n    data: dataString,\n    success: function success(data) {\n      logger('Request Add Response ' + data);\n      var jsObject = JSON.parse(data);\n      logger(jsObject);\n      var result = jsObject.requestFacility[0].result;\n      var loginmessage = jsObject.requestFacility[0].message;\n      alert(loginmessage);\n      window.location = 'book_facility';\n    },\n    error: function error(e) {\n      alert(\"An Error Occurred requesting facility \" + e);\n    }\n  });\n  return false;\n});\nfunction number_format(number) {\n  var thousands_sep = \",\";\n  var dec_point = \".\";\n  var decimals = 2;\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\n  var n = !isFinite(+number) ? 0 : +number,\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n    sep = typeof thousands_sep === 'undefined' ? ',' : thousands_sep,\n    dec = typeof dec_point === 'undefined' ? '.' : dec_point,\n    s = '',\n    toFixedFix = function toFixedFix(n, prec) {\n      var k = Math.pow(10, prec);\n      return '' + Math.round(n * k) / k;\n    };\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n  return s.join(dec);\n}\nfunction logger(msg) {\n  console.log(msg);\n}\nDate.prototype.addDays = function (days) {\n  this.setDate(this.getDate() + days);\n  return this;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/custom.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/custom.js"]();
/******/ 	
/******/ })()
;